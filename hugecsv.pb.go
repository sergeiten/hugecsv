// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hugecsv.proto

package hugecsv

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Item struct {
	PersonID             int32    `protobuf:"varint,1,opt,name=PersonID,proto3" json:"PersonID,omitempty"`
	Sex                  int32    `protobuf:"varint,2,opt,name=Sex,proto3" json:"Sex,omitempty"`
	StndY                int32    `protobuf:"varint,3,opt,name=StndY,proto3" json:"StndY,omitempty"`
	AgeGroup             int32    `protobuf:"varint,4,opt,name=AgeGroup,proto3" json:"AgeGroup,omitempty"`
	Sido                 int32    `protobuf:"varint,5,opt,name=Sido,proto3" json:"Sido,omitempty"`
	Sgg                  int32    `protobuf:"varint,6,opt,name=Sgg,proto3" json:"Sgg,omitempty"`
	KeySeq               int32    `protobuf:"varint,7,opt,name=KeySeq,proto3" json:"KeySeq,omitempty"`
	YkihoID              int32    `protobuf:"varint,8,opt,name=YkihoID,proto3" json:"YkihoID,omitempty"`
	RecuFrDt             int32    `protobuf:"varint,9,opt,name=RecuFrDt,proto3" json:"RecuFrDt,omitempty"`
	DsbjtCd              int32    `protobuf:"varint,10,opt,name=DsbjtCd,proto3" json:"DsbjtCd,omitempty"`
	DmdTramt             int32    `protobuf:"varint,11,opt,name=DmdTramt,proto3" json:"DmdTramt,omitempty"`
	DmdSbrdnAmt          int32    `protobuf:"varint,12,opt,name=DmdSbrdnAmt,proto3" json:"DmdSbrdnAmt,omitempty"`
	MainSick             string   `protobuf:"bytes,13,opt,name=MainSick,proto3" json:"MainSick,omitempty"`
	SubSick              string   `protobuf:"bytes,14,opt,name=SubSick,proto3" json:"SubSick,omitempty"`
	YkihoGubunCd         int32    `protobuf:"varint,15,opt,name=YkihoGubunCd,proto3" json:"YkihoGubunCd,omitempty"`
	YkihoSido            int32    `protobuf:"varint,16,opt,name=YkihoSido,proto3" json:"YkihoSido,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Item) Reset()         { *m = Item{} }
func (m *Item) String() string { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()    {}
func (*Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_hugecsv_354dcf74b4e05538, []int{0}
}
func (m *Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Item.Unmarshal(m, b)
}
func (m *Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Item.Marshal(b, m, deterministic)
}
func (dst *Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Item.Merge(dst, src)
}
func (m *Item) XXX_Size() int {
	return xxx_messageInfo_Item.Size(m)
}
func (m *Item) XXX_DiscardUnknown() {
	xxx_messageInfo_Item.DiscardUnknown(m)
}

var xxx_messageInfo_Item proto.InternalMessageInfo

func (m *Item) GetPersonID() int32 {
	if m != nil {
		return m.PersonID
	}
	return 0
}

func (m *Item) GetSex() int32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *Item) GetStndY() int32 {
	if m != nil {
		return m.StndY
	}
	return 0
}

func (m *Item) GetAgeGroup() int32 {
	if m != nil {
		return m.AgeGroup
	}
	return 0
}

func (m *Item) GetSido() int32 {
	if m != nil {
		return m.Sido
	}
	return 0
}

func (m *Item) GetSgg() int32 {
	if m != nil {
		return m.Sgg
	}
	return 0
}

func (m *Item) GetKeySeq() int32 {
	if m != nil {
		return m.KeySeq
	}
	return 0
}

func (m *Item) GetYkihoID() int32 {
	if m != nil {
		return m.YkihoID
	}
	return 0
}

func (m *Item) GetRecuFrDt() int32 {
	if m != nil {
		return m.RecuFrDt
	}
	return 0
}

func (m *Item) GetDsbjtCd() int32 {
	if m != nil {
		return m.DsbjtCd
	}
	return 0
}

func (m *Item) GetDmdTramt() int32 {
	if m != nil {
		return m.DmdTramt
	}
	return 0
}

func (m *Item) GetDmdSbrdnAmt() int32 {
	if m != nil {
		return m.DmdSbrdnAmt
	}
	return 0
}

func (m *Item) GetMainSick() string {
	if m != nil {
		return m.MainSick
	}
	return ""
}

func (m *Item) GetSubSick() string {
	if m != nil {
		return m.SubSick
	}
	return ""
}

func (m *Item) GetYkihoGubunCd() int32 {
	if m != nil {
		return m.YkihoGubunCd
	}
	return 0
}

func (m *Item) GetYkihoSido() int32 {
	if m != nil {
		return m.YkihoSido
	}
	return 0
}

type Summary struct {
	Processed            int32    `protobuf:"varint,1,opt,name=processed,proto3" json:"processed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Summary) Reset()         { *m = Summary{} }
func (m *Summary) String() string { return proto.CompactTextString(m) }
func (*Summary) ProtoMessage()    {}
func (*Summary) Descriptor() ([]byte, []int) {
	return fileDescriptor_hugecsv_354dcf74b4e05538, []int{1}
}
func (m *Summary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Summary.Unmarshal(m, b)
}
func (m *Summary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Summary.Marshal(b, m, deterministic)
}
func (dst *Summary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Summary.Merge(dst, src)
}
func (m *Summary) XXX_Size() int {
	return xxx_messageInfo_Summary.Size(m)
}
func (m *Summary) XXX_DiscardUnknown() {
	xxx_messageInfo_Summary.DiscardUnknown(m)
}

var xxx_messageInfo_Summary proto.InternalMessageInfo

func (m *Summary) GetProcessed() int32 {
	if m != nil {
		return m.Processed
	}
	return 0
}

func init() {
	proto.RegisterType((*Item)(nil), "hugecsv.Item")
	proto.RegisterType((*Summary)(nil), "hugecsv.Summary")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HugeCSVClient is the client API for HugeCSV service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HugeCSVClient interface {
	Send(ctx context.Context, opts ...grpc.CallOption) (HugeCSV_SendClient, error)
}

type hugeCSVClient struct {
	cc *grpc.ClientConn
}

func NewHugeCSVClient(cc *grpc.ClientConn) HugeCSVClient {
	return &hugeCSVClient{cc}
}

func (c *hugeCSVClient) Send(ctx context.Context, opts ...grpc.CallOption) (HugeCSV_SendClient, error) {
	stream, err := c.cc.NewStream(ctx, &_HugeCSV_serviceDesc.Streams[0], "/hugecsv.HugeCSV/Send", opts...)
	if err != nil {
		return nil, err
	}
	x := &hugeCSVSendClient{stream}
	return x, nil
}

type HugeCSV_SendClient interface {
	Send(*Item) error
	CloseAndRecv() (*Summary, error)
	grpc.ClientStream
}

type hugeCSVSendClient struct {
	grpc.ClientStream
}

func (x *hugeCSVSendClient) Send(m *Item) error {
	return x.ClientStream.SendMsg(m)
}

func (x *hugeCSVSendClient) CloseAndRecv() (*Summary, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(Summary)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// HugeCSVServer is the server API for HugeCSV service.
type HugeCSVServer interface {
	Send(HugeCSV_SendServer) error
}

func RegisterHugeCSVServer(s *grpc.Server, srv HugeCSVServer) {
	s.RegisterService(&_HugeCSV_serviceDesc, srv)
}

func _HugeCSV_Send_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(HugeCSVServer).Send(&hugeCSVSendServer{stream})
}

type HugeCSV_SendServer interface {
	SendAndClose(*Summary) error
	Recv() (*Item, error)
	grpc.ServerStream
}

type hugeCSVSendServer struct {
	grpc.ServerStream
}

func (x *hugeCSVSendServer) SendAndClose(m *Summary) error {
	return x.ServerStream.SendMsg(m)
}

func (x *hugeCSVSendServer) Recv() (*Item, error) {
	m := new(Item)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _HugeCSV_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hugecsv.HugeCSV",
	HandlerType: (*HugeCSVServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Send",
			Handler:       _HugeCSV_Send_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "hugecsv.proto",
}

func init() { proto.RegisterFile("hugecsv.proto", fileDescriptor_hugecsv_354dcf74b4e05538) }

var fileDescriptor_hugecsv_354dcf74b4e05538 = []byte{
	// 344 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x92, 0x41, 0x6b, 0xea, 0x40,
	0x14, 0x85, 0x5f, 0x9e, 0xd1, 0xe8, 0x55, 0xdf, 0x93, 0xe1, 0xf1, 0xb8, 0x48, 0x17, 0x92, 0x4d,
	0x85, 0x82, 0x8b, 0x16, 0xba, 0x17, 0x43, 0xad, 0x94, 0x42, 0x71, 0x4a, 0xc1, 0xa5, 0xc9, 0x0c,
	0x31, 0x95, 0x64, 0xec, 0x64, 0xa6, 0xd4, 0xbf, 0xd4, 0x5f, 0x59, 0xe6, 0x26, 0xd1, 0x76, 0x37,
	0xdf, 0x39, 0x73, 0xce, 0x0d, 0x99, 0x0b, 0xc3, 0x9d, 0x4d, 0x65, 0x52, 0xbe, 0xcf, 0x0e, 0x5a,
	0x19, 0xc5, 0x82, 0x1a, 0xc3, 0xcf, 0x16, 0xf8, 0x2b, 0x23, 0x73, 0x36, 0x86, 0xee, 0x93, 0xd4,
	0xa5, 0x2a, 0x56, 0x11, 0x7a, 0x13, 0x6f, 0xda, 0x5e, 0x9f, 0x98, 0x8d, 0xa0, 0xc5, 0xe5, 0x07,
	0xfe, 0x26, 0xd9, 0x1d, 0xd9, 0x3f, 0x68, 0x73, 0x53, 0x88, 0x0d, 0xb6, 0x48, 0xab, 0xc0, 0x75,
	0xcc, 0x53, 0xb9, 0xd4, 0xca, 0x1e, 0xd0, 0xaf, 0x3a, 0x1a, 0x66, 0x0c, 0x7c, 0x9e, 0x09, 0x85,
	0x6d, 0xd2, 0xe9, 0x4c, 0xbd, 0x69, 0x8a, 0x9d, 0xba, 0x37, 0x4d, 0xd9, 0x7f, 0xe8, 0x3c, 0xc8,
	0x23, 0x97, 0x6f, 0x18, 0x90, 0x58, 0x13, 0x43, 0x08, 0x36, 0xfb, 0x6c, 0xa7, 0x56, 0x11, 0x76,
	0xc9, 0x68, 0xd0, 0xcd, 0x5c, 0xcb, 0xc4, 0xde, 0xe9, 0xc8, 0x60, 0xaf, 0x9a, 0xd9, 0xb0, 0x4b,
	0x45, 0x65, 0xfc, 0x6a, 0x16, 0x02, 0xa1, 0x4a, 0xd5, 0xe8, 0x52, 0x51, 0x2e, 0x9e, 0xf5, 0x36,
	0x37, 0xd8, 0xaf, 0x52, 0x0d, 0xb3, 0x09, 0xf4, 0xa3, 0x5c, 0xf0, 0x58, 0x8b, 0x62, 0x9e, 0x1b,
	0x1c, 0x90, 0xfd, 0x5d, 0x72, 0xe9, 0xc7, 0x6d, 0x56, 0xf0, 0x2c, 0xd9, 0xe3, 0x70, 0xe2, 0x4d,
	0x7b, 0xeb, 0x13, 0xbb, 0x99, 0xdc, 0xc6, 0x64, 0xfd, 0x21, 0xab, 0x41, 0x16, 0xc2, 0x80, 0x3e,
	0x7a, 0x69, 0x63, 0x5b, 0x2c, 0x04, 0xfe, 0xa5, 0xe2, 0x1f, 0x1a, 0xbb, 0x80, 0x1e, 0x31, 0xfd,
	0xaa, 0x11, 0x5d, 0x38, 0x0b, 0xe1, 0xa5, 0xeb, 0xce, 0xf3, 0xad, 0x3e, 0xba, 0x8b, 0x07, 0xad,
	0x12, 0x59, 0x96, 0x52, 0xd4, 0xef, 0x75, 0x16, 0xae, 0x6f, 0x21, 0xb8, 0xb7, 0xa9, 0x5c, 0xf0,
	0x17, 0x76, 0x05, 0x3e, 0x97, 0x85, 0x60, 0xc3, 0x59, 0xb3, 0x01, 0xee, 0xb9, 0xc7, 0xa3, 0x13,
	0xd6, 0x8d, 0xe1, 0xaf, 0xa9, 0x17, 0x77, 0x68, 0x3b, 0x6e, 0xbe, 0x02, 0x00, 0x00, 0xff, 0xff,
	0xd2, 0x1f, 0x1f, 0xe3, 0x2e, 0x02, 0x00, 0x00,
}
